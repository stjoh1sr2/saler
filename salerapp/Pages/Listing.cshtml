@page
@model ListingModel
@{
    ViewData["Title"] = "View Listing";

    // Load current listing based on ID
    Listing listing = Model.LoadListing(Int32.Parse(Request.Query["id"].ToString()));

    // Username of poster for the listing
    String userName = "";

    // Flag for whether or not current user has this listing saved
    Boolean isSaved = false;

    if (listing is not null)
    {
        userName = Model.LoadUserName(listing.PosterId);
    }

    // Check if user is logged in
    if (HttpContextAccessor.HttpContext.Session.GetString("_User") is not null)
    {
        var userId = JsonConvert.DeserializeObject<User>(HttpContextAccessor.HttpContext.Session.GetString("_User")).UserId;
        
        // Check if user has this listing saved
        if (Model.db.SavedListings.Where(s => s.UserId == userId && s.ListingId == listing.ListingId).Count() > 0)
        {
            isSaved = true;
        }
    }
}

<!-- Main form -->
<main class="form w-100 m-auto text-center container">
    <div style="margin-left: 12.5%; margin-right: 12.5%; margin-top: 5%;">
        @if (listing is not null)
        {
            <h1 class="display-6 fw-bold lh-1 mb-4 col-md-8" style="text-align:left;">
                View Sale
                <!-- Badges -->
                @if (listing.IsHidden)
                {
                    <span class="badge bg-dark" style="font-size: 1rem; position: absolute; margin-top: 10px; margin-left: 10px;">Hidden</span>
                }
                @if (isSaved)
                {
                    
                    {
                        <span class="badge bg-success" style="font-size: 1rem; position: absolute; margin-top: 10px; margin-left: 10px;">Saved</span>
                    }
                }
            </h1>
            <div style="text-align: left;">
                <div class="row">
                    <div class="col-md-7">
                        <div style="margin-bottom: 5px;"><strong>Start Date: </strong> @listing.StartDate.ToShortDateString() @listing.StartDate.ToShortTimeString()</div>
                    </div>
                    <div class="col-md-3" style="text-align: left;">
                        <div style="margin-bottom: 5px;"><strong>Poster: </strong> @userName</div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-7">
                        <div style="margin-bottom: 5px;"><strong>End Date: </strong> @listing.EndDate.ToShortDateString() @listing.EndDate.ToShortTimeString()</div>
                    </div>
                    <div class="col-md-3" style="text-align: left;">
                        <div style="margin-bottom: 5px;"><strong>Listing Id: </strong> #@listing.ListingId</div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-7">
                        <div style="margin-bottom: 20px;"><strong>Location: </strong> @listing.StreetAddress, @listing.City, @listing.State @((listing.ZIPCode <= 10000 ? "0" : ""))@listing.ZIPCode</div>
                    </div>
                    <div class="col-md-3" style="text-align: left;">
                        <div style="margin-bottom: 5px;"><strong>Posted: </strong> @listing.PostDate.ToShortDateString()</div>
                    </div>
                </div>

                
                <div>
                    <h4 style="margin-bottom: 10px;">
                        Description
                    </h4>
                </div>
                <div>@listing.Description</div>
                <div class="row" style="margin-top: 50px;">
                    <div class="col-md-6">
                        @{
                           int saveCount = Model.db.SavedListings.Where(s => s.ListingId == listing.ListingId).Count();
                        }
                        <i>Saved by @saveCount @(saveCount == 1 ? "saler" : "salers").</i>
                    </div>
                    <!-- Action button pannel for logged in users -->
                    <div class="col-md-6">
                        @if (HttpContextAccessor.HttpContext.Session.GetString("_User") is not null)
                        {
                            // Check if current user is the poster of the listing
                            @if (JsonConvert.DeserializeObject<User>(HttpContext.Session.GetString("_User")).UserId == listing.PosterId)
                            {
                                <div style="text-align: right; padding-top: 10px;">
                                    @if (!listing.IsHidden)
                                    {
                                        @Html.ActionLink("Hide", "ToggleHideListing", "Listing", new { listing.ListingId }, new {@class="btn btn-dark", @role="button"})
                                    }
                                    else
                                    {
                                        @Html.ActionLink("Unhide", "ToggleHideListing", "Listing", new { listing.ListingId }, new {@class="btn btn-dark", @role="button"})
                                    }
                                    <a role="button" class="btn btn-dark" href="@Url.Content("~/editlisting?id=" + listing.ListingId)">Edit</a>
                                </div>
                            }
                            else if (!isSaved)
                            {
                                // Allow users who are not the poster to save listing
                                <div style="text-align: right; padding-top: 10px;">
                                    @Html.ActionLink("Save", "SaveListing", "Listing", new { listing.ListingId }, new {@class="btn btn-dark", @role="button"})
                                </div>
                            }
                            else
                            {
                                // Allow users who are not the poster to unsave listing
                                <div style="text-align: right; padding-top: 10px;">
                                    @Html.ActionLink("Unsave", "UnsaveListing", "Listing", new { listing.ListingId }, new {@class="btn btn-dark", @role="button"})
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>
        }
        else
        {
            // Listing not found message
            <div>"Listing not found."</div>
        }
    </div>
</main>